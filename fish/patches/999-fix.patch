# glibc
obj/wutil.o: In function `safe_strerror(int)':
wutil.cpp:(.text+0xc08): warning: `sys_errlist' is deprecated; use `strerror' or `strerror_r' instead
wutil.cpp:(.text+0xbf8): warning: `sys_nerr' is deprecated; use `strerror' or `strerror_r' instead
--- a/src/wutil.cpp
+++ b/src/wutil.cpp
@@ -286,7 +286,7 @@
 // have to grub through sys_nerr and sys_errlist directly On GNU toolchain, this will produce a
 // deprecation warning from the linker (!!), which appears impossible to suppress!
 const char *safe_strerror(int err) {
-#if defined(__UCLIBC__)
+#if defined(__UCLIBC__) || defined(__GLIBC__)
     // uClibc does not have sys_errlist, however, its strerror is believed to be async-safe.
     // See issue #808.
     return strerror(err);
